!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
CFLAGS	/home/ben/usr/src/c/todoc/Makefile	/^CFLAGS= -O3 --std=c11$/;"	m	language:Make
TASKLIST	/home/ben/usr/src/c/todoc/tasklist.h	2;"	d	language:C++
Tasklist	/home/ben/usr/src/c/todoc/tasklist.h	/^}Tasklist;$/;"	t	language:C++	typeref:struct:tasklist_t
VERSION_BUILD	/home/ben/usr/src/c/todoc/todoc.c	12;"	d	language:C++	file:
VERSION_MAJOR	/home/ben/usr/src/c/todoc/todoc.c	10;"	d	language:C++	file:
VERSION_MINOR	/home/ben/usr/src/c/todoc/todoc.c	11;"	d	language:C++	file:
_GNU_SOURCE	/home/ben/usr/src/c/todoc/task.c	1;"	d	language:C++	file:
__MINLLIST__	/home/ben/usr/src/c/todoc/dllist.h	5;"	d	language:C++
add_task	/home/ben/usr/src/c/todoc/todoc.c	/^int add_task(char* filename, char* string){$/;"	f	language:C++
compare_completion	/home/ben/usr/src/c/todoc/task.c	/^int compare_completion(Task* a, Task* b){$/;"	f	language:C++
complete_task	/home/ben/usr/src/c/todoc/todoc.c	/^void complete_task(char* filename, int number)$/;"	f	language:C++
data	/home/ben/usr/src/c/todoc/dllist.h	/^    void* data;$/;"	m	language:C++	struct:dlnode
destroytask	/home/ben/usr/src/c/todoc/tasklist.c	/^void destroytask(void* item){$/;"	f	language:C++
dllist	/home/ben/usr/src/c/todoc/dllist.h	/^typedef struct dllist {$/;"	s	language:C++
dllist	/home/ben/usr/src/c/todoc/dllist.h	/^}dllist;$/;"	t	language:C++	typeref:struct:dllist
dllist_append	/home/ben/usr/src/c/todoc/dllist.c	/^int dllist_append(dllist* l, void* item){$/;"	f	language:C++
dllist_append	/home/ben/usr/src/c/todoc/dllist.h	/^int dllist_append(dllist*, void*);$/;"	p	language:C++
dllist_count	/home/ben/usr/src/c/todoc/dllist.c	/^int dllist_count(dllist* l){$/;"	f	language:C++
dllist_do	/home/ben/usr/src/c/todoc/dllist.c	/^int dllist_do(dllist* list, void (*function)(void*)){$/;"	f	language:C++
dllist_do	/home/ben/usr/src/c/todoc/dllist.h	/^int dllist_do(dllist*, void (*)(void*));$/;"	p	language:C++
dllist_filter	/home/ben/usr/src/c/todoc/dllist.c	/^dllist* dllist_filter(dllist* list, bool (*fun)(void*)){$/;"	f	language:C++
dllist_filter	/home/ben/usr/src/c/todoc/dllist.h	/^dllist* dllist_filter(dllist* list, bool (*fun)(void*));$/;"	p	language:C++
dllist_free	/home/ben/usr/src/c/todoc/dllist.c	/^int dllist_free(dllist* list)$/;"	f	language:C++
dllist_free	/home/ben/usr/src/c/todoc/dllist.h	/^int dllist_free(dllist*);$/;"	p	language:C++
dllist_init	/home/ben/usr/src/c/todoc/dllist.c	/^void dllist_init(dllist* this){$/;"	f	language:C++
dllist_init	/home/ben/usr/src/c/todoc/dllist.h	/^void dllist_init(dllist*);$/;"	p	language:C++
dllist_map	/home/ben/usr/src/c/todoc/dllist.c	/^dllist* dllist_map(dllist* list, void* (*function)(void*)){$/;"	f	language:C++
dllist_map	/home/ben/usr/src/c/todoc/dllist.h	/^dllist* dllist_map(dllist* list, void* (*function)(void*));$/;"	p	language:C++
dllist_new	/home/ben/usr/src/c/todoc/dllist.c	/^dllist* dllist_new(){$/;"	f	language:C++
dllist_new	/home/ben/usr/src/c/todoc/dllist.h	/^struct dllist* dllist_new(void);$/;"	p	language:C++
dllist_pop	/home/ben/usr/src/c/todoc/dllist.c	/^void* dllist_pop(dllist* l){$/;"	f	language:C++
dllist_pop	/home/ben/usr/src/c/todoc/dllist.h	/^void* dllist_pop(dllist*);$/;"	p	language:C++
dllist_push	/home/ben/usr/src/c/todoc/dllist.c	/^int dllist_push(dllist* l, void* item){$/;"	f	language:C++
dllist_push	/home/ben/usr/src/c/todoc/dllist.h	/^int dllist_push(dllist*, void*);$/;"	p	language:C++
dllist_retrieve	/home/ben/usr/src/c/todoc/dllist.c	/^void* dllist_retrieve(dllist* l){$/;"	f	language:C++
dllist_retrieve	/home/ben/usr/src/c/todoc/dllist.h	/^void* dllist_retrieve(dllist*);$/;"	p	language:C++
dllist_sort	/home/ben/usr/src/c/todoc/dllist.c	/^dllist* dllist_sort(dllist* list, int (*cmp)(void*, void*)){$/;"	f	language:C++
dllist_sort	/home/ben/usr/src/c/todoc/dllist.h	/^struct dllist* dllist_sort(dllist*, int (*)(void*, void*));$/;"	p	language:C++
dlnode	/home/ben/usr/src/c/todoc/dllist.h	/^struct dlnode{$/;"	s	language:C++
dlnode_free	/home/ben/usr/src/c/todoc/dllist.c	/^void dlnode_free(struct dlnode* target){$/;"	f	language:C++
dlnode_free	/home/ben/usr/src/c/todoc/dllist.h	/^void dlnode_free(struct dlnode*);$/;"	p	language:C++
dlnode_link	/home/ben/usr/src/c/todoc/dllist.c	/^void dlnode_link(struct dlnode *first, struct dlnode *second){$/;"	f	language:C++
dlnode_link	/home/ben/usr/src/c/todoc/dllist.h	/^void dlnode_link(struct dlnode*, struct dlnode*);$/;"	p	language:C++
dlnode_new	/home/ben/usr/src/c/todoc/dllist.c	/^struct dlnode* dlnode_new(void* item){$/;"	f	language:C++
dlnode_new	/home/ben/usr/src/c/todoc/dllist.h	/^struct dlnode *dlnode_new(void*);$/;"	p	language:C++
dlnode_seek	/home/ben/usr/src/c/todoc/dllist.c	/^struct dlnode* dlnode_seek(struct dlnode *haystack, int index){$/;"	f	language:C++
dlnode_seek	/home/ben/usr/src/c/todoc/dllist.h	/^struct dlnode *dlnode_seek(struct dlnode*, int);$/;"	p	language:C++
dlnode_unlink	/home/ben/usr/src/c/todoc/dllist.c	/^void dlnode_unlink(struct dlnode *node){$/;"	f	language:C++
dlnode_unlink	/home/ben/usr/src/c/todoc/dllist.h	/^void dlnode_unlink(struct dlnode*);$/;"	p	language:C++
extract_complete	/home/ben/usr/src/c/todoc/task.c	/^static bool extract_complete(bstring taskstr){$/;"	f	language:C++	file:
extract_date	/home/ben/usr/src/c/todoc/task.c	/^static date *extract_date(bstring taskstr){$/;"	f	language:C++	file:
extract_priority	/home/ben/usr/src/c/todoc/task.c	/^static char extract_priority(bstring taskstr){$/;"	f	language:C++	file:
get_priority	/home/ben/usr/src/c/todoc/task.c	/^char get_priority(Task* task){$/;"	f	language:C++
head	/home/ben/usr/src/c/todoc/dllist.h	/^    struct dlnode* head;$/;"	m	language:C++	struct:dllist	typeref:struct:dllist::dlnode
list	/home/ben/usr/src/c/todoc/tasklist.h	/^    dllist* list;$/;"	m	language:C++	struct:tasklist_t
list_tasks	/home/ben/usr/src/c/todoc/todoc.c	/^int list_tasks(char* filename){$/;"	f	language:C++
list_tasks_matching	/home/ben/usr/src/c/todoc/todoc.c	/^void list_tasks_matching(char* filename, char* string){$/;"	f	language:C++
main	/home/ben/usr/src/c/todoc/todoc.c	/^int main(int argc, char* argv[]){$/;"	f	language:C++
merge	/home/ben/usr/src/c/todoc/dllist.c	/^static dllist* merge(dllist* l, dllist* r, int (*cmp)(void*, void*)){$/;"	f	language:C++	file:
next	/home/ben/usr/src/c/todoc/dllist.h	/^    struct dlnode* next;$/;"	m	language:C++	struct:dlnode	typeref:struct:dlnode::dlnode
parsedate	/home/ben/usr/src/c/todoc/task.c	/^date* parsedate(char* expr){$/;"	f	language:C++
prev	/home/ben/usr/src/c/todoc/dllist.h	/^    struct dlnode* prev;$/;"	m	language:C++	struct:dlnode	typeref:struct:dlnode::dlnode
print_help	/home/ben/usr/src/c/todoc/todoc.c	/^void print_help(){$/;"	f	language:C++
print_short_help	/home/ben/usr/src/c/todoc/todoc.c	/^void print_short_help(){ $/;"	f	language:C++
print_version	/home/ben/usr/src/c/todoc/todoc.c	/^void print_version(){$/;"	f	language:C++
remove_part	/home/ben/usr/src/c/todoc/task.c	/^static bstring remove_part(bool b, bstring s, size_t len){$/;"	f	language:C++	file:
remove_task	/home/ben/usr/src/c/todoc/todoc.c	/^int remove_task(char* filename, int number){$/;"	f	language:C++
strings_equal	/home/ben/usr/src/c/todoc/todoc.c	/^bool strings_equal(char* subject, char* first, char* sec){$/;"	f	language:C++
tail	/home/ben/usr/src/c/todoc/dllist.h	/^    struct dlnode* tail;$/;"	m	language:C++	struct:dllist	typeref:struct:dllist::dlnode
task_append	/home/ben/usr/src/c/todoc/task.c	/^int task_append(Task* t, const char* string){$/;"	f	language:C++
task_clear	/home/ben/usr/src/c/todoc/task.c	/^void task_clear(Task* t){$/;"	f	language:C++
task_default_compare	/home/ben/usr/src/c/todoc/task.c	/^int task_default_compare(void* a, void* b){$/;"	f	language:C++
task_dump	/home/ben/usr/src/c/todoc/task.c	/^char* task_dump(Task* t){$/;"	f	language:C++
task_free	/home/ben/usr/src/c/todoc/task.c	/^void task_free(Task* task){$/;"	f	language:C++
task_has_keyword	/home/ben/usr/src/c/todoc/task.c	/^bool task_has_keyword(Task* t, const char* keyword){$/;"	f	language:C++
task_new	/home/ben/usr/src/c/todoc/task.c	/^Task* task_new(){$/;"	f	language:C++
task_parse	/home/ben/usr/src/c/todoc/task.c	/^int task_parse(Task* task, char* str){$/;"	f	language:C++
task_set_complete	/home/ben/usr/src/c/todoc/task.c	/^void task_set_complete(Task* task, bool status){$/;"	f	language:C++
task_set_lineno	/home/ben/usr/src/c/todoc/task.c	/^void task_set_lineno(Task* task, int lineno){ task->linenumber = lineno; }$/;"	f	language:C++
task_set_string	/home/ben/usr/src/c/todoc/task.c	/^void task_set_string(Task* t, const char* string){$/;"	f	language:C++
task_show	/home/ben/usr/src/c/todoc/task.c	/^void task_show(Task* t){$/;"	f	language:C++
tasklist_append	/home/ben/usr/src/c/todoc/tasklist.h	/^int tasklist_append(Tasklist *list, Task *task);$/;"	p	language:C++
tasklist_destroy	/home/ben/usr/src/c/todoc/tasklist.c	/^void tasklist_destroy(tasklist* list){$/;"	f	language:C++
tasklist_destroy	/home/ben/usr/src/c/todoc/tasklist.h	/^void tasklist_destroy(Tasklist *list);$/;"	p	language:C++
tasklist_display	/home/ben/usr/src/c/todoc/tasklist.c	/^int tasklist_display(tasklist* list){$/;"	f	language:C++
tasklist_display	/home/ben/usr/src/c/todoc/tasklist.h	/^int tasklist_display(Tasklist *list);$/;"	p	language:C++
tasklist_dump	/home/ben/usr/src/c/todoc/tasklist.c	/^int tasklist_dump(tasklist *list, FILE* f){$/;"	f	language:C++
tasklist_dump	/home/ben/usr/src/c/todoc/tasklist.h	/^int tasklist_dump(Tasklist *list, FILE* file);$/;"	p	language:C++
tasklist_free	/home/ben/usr/src/c/todoc/tasklist.c	/^void tasklist_free(tasklist* list){$/;"	f	language:C++
tasklist_free	/home/ben/usr/src/c/todoc/tasklist.h	/^void tasklist_free(Tasklist *list);$/;"	p	language:C++
tasklist_get	/home/ben/usr/src/c/todoc/tasklist.c	/^Task* tasklist_get(tasklist* this, int index){$/;"	f	language:C++
tasklist_get	/home/ben/usr/src/c/todoc/tasklist.h	/^Task* tasklist_get(Tasklist* list, int index);$/;"	p	language:C++
tasklist_merge	/home/ben/usr/src/c/todoc/tasklist.h	/^Tasklist* tasklist_merge(Tasklist *list, Tasklist *other);$/;"	p	language:C++
tasklist_new	/home/ben/usr/src/c/todoc/tasklist.c	/^tasklist* tasklist_new(){$/;"	f	language:C++
tasklist_new	/home/ben/usr/src/c/todoc/tasklist.h	/^Tasklist* tasklist_new();$/;"	p	language:C++
tasklist_read	/home/ben/usr/src/c/todoc/tasklist.c	/^int tasklist_read(tasklist *list, FILE* f){$/;"	f	language:C++
tasklist_read	/home/ben/usr/src/c/todoc/tasklist.h	/^int tasklist_read(Tasklist *list, FILE* file);$/;"	p	language:C++
tasklist_remove	/home/ben/usr/src/c/todoc/tasklist.c	/^Task* tasklist_remove(tasklist* this, int index){$/;"	f	language:C++
tasklist_remove	/home/ben/usr/src/c/todoc/tasklist.h	/^Task* tasklist_remove(Tasklist* list, int index);$/;"	p	language:C++
tasklist_search	/home/ben/usr/src/c/todoc/tasklist.c	/^tasklist* tasklist_search(tasklist* list, char* filter){$/;"	f	language:C++
tasklist_search	/home/ben/usr/src/c/todoc/tasklist.h	/^Tasklist* tasklist_search(Tasklist *list, char *string);$/;"	p	language:C++
tasklist_t	/home/ben/usr/src/c/todoc/tasklist.h	/^typedef struct tasklist_t {$/;"	s	language:C++
